package utilitiesRappi;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.Alert;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;


/**
 * @author Nohora Meneses
 *
 */
public class RappiUtility {

	static WebDriverWait wait;

	/**
	 * Take Screenshot
	 * 
	 * @param driver    WebDriver
	 * 
	 * @param imageName File Name to Save
	 */
	public static void takeScreen(WebDriver driver, String imageName) {

		String os = System.getProperty("os.name").toLowerCase();

		File directory = new File("./Evidencias");

		try {
			if (directory.isDirectory()) {

				File image = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
				
				if (os.contains("mac")) {
					FileUtils.copyFile(image, new File(directory.getAbsolutePath() + "/" + imageName + ".png"));
				} else {
					FileUtils.copyFile(image, new File(directory.getAbsolutePath() + "\\" + imageName + ".png"));
				}
			} else {
				throw new IOException("ERROR: The specified path isn't a directory!");
			}
		} catch (IOException e) {
			System.out.println(e.getMessage());
		}
	}

	/**
	 * High Light On Element
	 * 
	 * @param driver  WebDriver
	 * 
	 * @param element WebElement to High Light
	 */
	public static void highLightElement(WebDriver driver, WebElement element) {

		JavascriptExecutor js = (JavascriptExecutor) driver;

		// js.executeScript("arguments[0].setAttribute('style','background: yellow;
		// border: 2px solid red;');", element);
		js.executeScript("arguments[0].style.border='2px solid green'", element);

		try {
			Thread.sleep(500);
		} catch (InterruptedException e) {
			System.out.println(e.getMessage());
		}

		js.executeScript("arguments[0].setAttribute('style', 'border: solid 2px white')", element);
		// js.executeScript("arguments[0].style.border='solid 2px white'", element);
	}

	/**
	 * Send E-mail
	 * 
	 * @param driver     WebDriver
	 * 
	 * @param WebElement to High Light
	 */
	public static void sendEmail() {

	}

	/**
	 * Click On Element
	 * 
	 * @param driver      WebDriver
	 * 
	 * @param elemToClick WebElement to Click
	 * 
	 * @return TRUE only if Click on element is correct
	 */
	public static Boolean clickOnElement(WebDriver driver, WebElement elemToClick) {
		wait = new WebDriverWait(driver, 1);

		try {
			wait.until(ExpectedConditions.elementToBeClickable(elemToClick));
			if (elemToClick.isEnabled()) {
				RappiUtility.highLightElement(driver, elemToClick);
				elemToClick.click();
				return true;
			} else {
				throw new IOException("ERROR: Element to Will Click isn't Enabled!");
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
			return false;
		}
	}
	
	/**
	 * Validate if an Element in Displayed
	 * 
	 * @param driver      WebDriver
	 * 
	 * @param highLight   True: Do highLight On Element - False: Don't highLight
	 * 
	 * @param elemToVerify WebElement to will validate
	 * 
	 * @return TRUE only if the element is Displayed
	 */
	public static Boolean verifyAnElement(WebDriver driver, Boolean highLight, WebElement elemToVerify) {
		wait = new WebDriverWait(driver, 1);

		try {
			wait.until(ExpectedConditions.visibilityOf(elemToVerify));
			if (elemToVerify.isDisplayed()) {
				if(highLight) {
					RappiUtility.highLightElement(driver, elemToVerify);
					return true;	
				}else {
					return true;
				}
			} else {
				throw new IOException("ERROR: Element isn't Displayed!");
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
			return false;
		}
	}
	
	
	/**
	 * Validate if an Alert in Displayed
	 * 
	 * @param driver      WebDriver
	 * 
	 */
	public static void verifyAlerts(WebDriver driver) {
		Alert alert = driver.switchTo().alert();
		alert.accept();
	}

}
